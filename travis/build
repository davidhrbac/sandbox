#!/usr/bin/env bash

LOOKASIDE="http://koji.spacewalkproject.org/kojifiles/lookaside-static"

STATUS_ALL=0

GITROOT=$(pwd)/$(git rev-parse --show-cdup)

# For pull requests just compare target branch and github merge commit,
# TRAVIS_COMMIT_RANGE is unusable because there is commit from master
# and if pull request modifies old version, range is big and many files
# differ (may be bug in travis)
if [ "$TRAVIS_PULL_REQUEST" == "false" ] ; then
    COMMIT_RANGE=$TRAVIS_COMMIT_RANGE
else
    COMMIT_RANGE=$TRAVIS_BRANCH...FETCH_HEAD
fi

echo "Commit range: $COMMIT_RANGE"

CHANGED_FILES=$(git diff --name-only $COMMIT_RANGE | egrep "\.spec$")

for SPEC_FILE in $CHANGED_FILES ; do
  echo "Working with $SPEC_FILE"

  package_basename=$(dirname $SPEC_FILE | xargs basename)
  
  echo -en "travis_fold:start:$package_basename-get-sources\\r"
  
  cd specs/$package_basename
  tito init
  rpmspec -q --srpm --qf "%{version}\n" $package_basename.spec
  rpmspec -q --srpm --qf "%{source}\n" $package_basename.spec
  rpmspec -P $package_basename.spec | grep -Po '(?<=Source: ).+(?=)' | xargs wget 
  rpmspec -P $package_basename.spec | grep -Po '(?<=Source\d: ).+(?=)' | xargs wget
  
  git add .
  git commit -a -m "Source downloaded"
  
  tito tag --keep-version --no-auto-changelog
  
  git status
  ls -al
  #tito build --srpm --offline
  # create SRPM
  srpm=$(tito build --srpm --offline | tail -n1 | sed 's/^Wrote: //g')
  echo "SRPM created: $srpm"

  echo -en "travis_fold:end:$package_basename-get-sources\\r"

  echo -en "travis_fold:start:$package_basename-build\\r"
  
  echo -en "travis_fold:start:$SPEC_FILE-build\\r"
  sudo mock -r centos-6-x86_64 --resultdir=/tmp/mock/$package_basename --rebuild $srpm
  echo -en "travis_fold:end:$SPEC_FILE-build\\r"
  
  echo -en "travis_fold:start:$package_basename-build-log\\r"
  echo "# build.log"
  cat /tmp/mock/$package_basename/build.log
  echo -en "travis_fold:end:$package_basename-build-log\\r"
  
  echo -en "travis_fold:start:$package_basename-root-log\\r"
  echo "# root.log"
  cat /tmp/mock/$package_basename/root.log
  echo -en "travis_fold:end:$package_basename-root-log\\r"
  
  echo -en "travis_fold:start:$package_basename-state-log\\r"
  echo "# state.log"
  cat /tmp/mock/$package_basename/state.log
  echo -en "travis_fold:end:$package_basename-state-log\\r"
  
  echo -en "travis_fold:end:$package_basename-build\\r"

  ls -al /tmp/mock/$package_basename
done
